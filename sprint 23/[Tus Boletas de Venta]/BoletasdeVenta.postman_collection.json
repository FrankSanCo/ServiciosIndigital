{
	"info": {
		"_postman_id": "320202fd-9ce9-4eb4-b340-79e9b0191b89",
		"name": "BoletasdeVenta",
		"description": "Micorservicio de usabilidad us-ux-benefit\n\nContact Support:\n Name: Tunki Benefit InDigital\n Email: developers@indigital.pe",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "benefit",
			"item": [
				{
					"name": "spsa",
					"item": [
						{
							"name": "Obtener los registros de venta de los 3 dias previos",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5ab600d2-b472-4a84-82e9-7a7f36785789",
										"exec": [
											"let codBodyEsp = data.codbody;\r",
											"let deviceId = pm.environment.get(\"DeviceId\");\r",
											"let rtoken = data.rtoken;\r",
											"let rpw = data.rpw;\r",
											"let url = pm.variables.get(\"baseUrl\");\r",
											"//let userActual = pm.environment.get(\"Usuario\");\r",
											"//let passActual = pm.environment.get(\"passActual\");\r",
											"let userActual=data.userExcel+'';\r",
											"let passActual=data.passExcel+'';\r",
											"\r",
											"\r",
											"if(rtoken===\"\")\r",
											"{\r",
											"pm.sendRequest(\r",
											"    {\r",
											"        url: url + '/agora-identity/identity/random-keyboard', method: 'GET',\r",
											"        mode: 'application/json',\r",
											"        header:\r",
											"        {\r",
											"            'X-Device-Id': deviceId + ''\r",
											"        },\r",
											"        body: {\r",
											"            mode: 'raw',\r",
											"        }\r",
											"    }, function (err, response) {\r",
											"    pm.environment.set(\"keyboard\", response.json().keyboard);\r",
											"\r",
											"    let resultTeclado = response.json().keyboard;\r",
											"    let pass = passActual;\r",
											"    let passFinal = \"[\";\r",
											"    for (let p = 0; p < pass.length; p++) {\r",
											"        passPos = pass.substring(p, p + 1);\r",
											"        for (let i = 0; i < resultTeclado.length; i++) {\r",
											"            if (resultTeclado[i] == passPos) {\r",
											"                passFinal = passFinal + i;\r",
											"                if (p == 5) {\r",
											"                    passFinal = passFinal + \"]\";\r",
											"                }\r",
											"                else {\r",
											"                    passFinal = passFinal + \",\";\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"    if (rpw === \"\") {\r",
											"        pm.environment.set(\"Password\", passFinal);\r",
											"    }\r",
											"    else {\r",
											"        pm.environment.set(\"Password\", data.rpw);\r",
											"    }\r",
											"    let usidentifir = userActual;\r",
											"    pm.sendRequest(\r",
											"        {\r",
											"            url: url + '/agora-identity/identity/sign-in', method: 'POST',\r",
											"            mode: 'application/json',\r",
											"            header:\r",
											"            {\r",
											"                'X-Device-Id': deviceId + '',\r",
											"                'X-Platform': 'AND',\r",
											"                'X-Application': 'CUS',\r",
											"                'X-Version': '1.0',\r",
											"                'X-Model': 'abcd',\r",
											"                'Authorization': 'Basic Nzc4MDIxNmEtM2NjYi0zOGU2LWE0NTctYWNlOTA1MmYwZmQ4OmRlOTQxYWJiLWNiNjMtMzljMC1iNmVhLWZhNDFiZmRkZjJiYw==',\r",
											"                'Content-Type': 'application/json',\r",
											"            },\r",
											"            body: {\r",
											"                mode: 'raw',\r",
											"                raw: JSON.stringify({\r",
											"                    'identifier': usidentifir,\r",
											"                    'positions': JSON.parse(passFinal)\r",
											"                })\r",
											"            }\r",
											"        }, function (err, response) {\r",
											"        pm.environment.set(\"accessToken\", response.json().access_token);\r",
											"\r",
											"    });\r",
											"});\r",
											"\r",
											"}\r",
											"else\r",
											"{\r",
											"    pm.environment.set(\"accessToken\", data.authorization);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f5098293-de0b-43e3-b31d-5f2a6a2d7133",
										"exec": [
											"let expectedCode= data.codigo;\r",
											"let actualCode=responseCode.code;\r",
											"\r",
											" \r",
											"\r",
											"if(expectedCode!==undefined && expectedCode!==null){\r",
											"   if(expectedCode===actualCode){\r",
											"       if(expectedCode===200){\r",
											"           pm.test(\"el status code es: \"+actualCode,function(){pm.response.to.have.status(expectedCode); });\r",
											"       }\r",
											"       else if(expectedCode===400){\r",
											"          // let response=JSON.parse(responseBody);\r",
											"           pm.test(\"el status code es: \"+actualCode,function(){pm.response.to.have.status(expectedCode); });\r",
											"          /* pm.test(\"el código de error es: GEN_ALL_01\", function(){\r",
											"               pm.expect(response.code).to.eql(\"GEN_ALL_01\");\r",
											"           })*/\r",
											"       }\r",
											"        else if(expectedCode===401){\r",
											"          // let response=JSON.parse(responseBody);\r",
											"           pm.test(\"el status code es: \"+actualCode,function(){pm.response.to.have.status(expectedCode); });\r",
											"          /* pm.test(\"el código de error es: GEN_ALL_01\", function(){\r",
											"               pm.expect(response.code).to.eql(\"GEN_ALL_01\");\r",
											"           })*/\r",
											"       }\r",
											"     \r",
											"\r",
											"        else if(expectedCode===500){\r",
											"           let response=JSON.parse(responseBody);\r",
											"           pm.test(\"el status code es: \"+actualCode,function(){pm.response.to.have.status(expectedCode); });\r",
											"           pm.test(\"el código de error es: GEN_ALL_04\", function(){\r",
											"               pm.expect(response.code).to.eql(\"GEN_ALL_04\");\r",
											"           })\r",
											"       }\r",
											"       \r",
											"        else{\r",
											"          pm.test(\"status code no mapeado\",function(){ pm.response.to.have.status(null);});\r",
											"       console.log(\"el codigo no es igual\");  \r",
											"       }\r",
											"       \r",
											"         \r",
											"   }\r",
											"   else{\r",
											"       pm.test(\"se esperaba status code: \"+expectedCode,function(){ pm.response.to.have.status(expectedCode);});\r",
											"       console.log(\"el codigo no es igual\");\r",
											"   }\r",
											"}\r",
											"else{\r",
											"    pm.test(\"no se pudo obtener el código esperado, tiene que ejecutar el runner con el csv\",function(){ pm.expect(\"undefined\").to.equal(\"\"); });\r",
											"    console.log(\"no se pudo obtener el código esperado\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) Identificador del dispositivo que consume el servicio",
										"key": "X-Device-Id",
										"value": "{{deviceId}}"
									},
									{
										"description": "(Required) Plataforma del dispositivo que consume el servicio ( AND:Android , IOS:IOS )",
										"key": "X-Platform",
										"value": "{{platform}}"
									},
									{
										"description": "(Required) Aplicación del dispositivo que consume el servicio ( CUS:Aplicación Cliente , COM:Aplicación Negocio )",
										"key": "X-Application",
										"value": "{{application}}"
									},
									{
										"description": "(Required) Token de acceso del dispositivo que consume el servicio",
										"key": "access_token",
										"value": "{{accessToken}}"
									},
									{
										"description": "(Required) Client id de la aplicación",
										"key": "client_id",
										"value": "{{clientId}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/agora-user/benefit/spsa/invoices/last",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"agora-user",
										"benefit",
										"spsa",
										"invoices",
										"last"
									]
								},
								"description": "Servicio para obtener los ultimos recibos"
							},
							"response": [
								{
									"name": "List Invoices",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Device-Id",
												"value": "<string>",
												"description": "(Required) Identificador del dispositivo que consume el servicio"
											},
											{
												"key": "X-Platform",
												"value": "<AND|IOS>",
												"description": "(Required) Plataforma del dispositivo que consume el servicio ( AND:Android , IOS:IOS )"
											},
											{
												"key": "X-Application",
												"value": "<CUS|COM>",
												"description": "(Required) Aplicación del dispositivo que consume el servicio ( CUS:Aplicación Cliente , COM:Aplicación Negocio )"
											},
											{
												"key": "access_token",
												"value": "<string>",
												"description": "(Required) Token de acceso del dispositivo que consume el servicio"
											},
											{
												"key": "client_id",
												"value": "<string>",
												"description": "(Required) Client id de la aplicación"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/benefit/spsa/invoices/last",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"benefit",
												"spsa",
												"invoices",
												"last"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"code\": \"BA69-05534555\",\n  \"date\": \"25/04/2020\",\n  \"amount\": \"S/ 11.11\",\n  \"place\": \"Plaza Vea La Molina\",\n  \"cashier\": \"31\"\n },\n {\n  \"code\": \"BA69-05514255\",\n  \"date\": \"25/04/2020\",\n  \"amount\": \"S/ 33.11\",\n  \"place\": \"Plaza Vea Los Olivos\",\n  \"cashier\": \"12\"\n },\n {\n  \"code\": \"BA66-05514255\",\n  \"date\": \"24/04/2020\",\n  \"amount\": \"S/ 123.34\",\n  \"place\": \"Plaza Vea La Merced\",\n  \"cashier\": \"34\"\n },\n {\n  \"code\": \"BA34-05514255\",\n  \"date\": \"23/04/2020\",\n  \"amount\": \"S/ 10.00\",\n  \"place\": \"Plaza Vea La Merced\",\n  \"cashier\": \"10\"\n }\n]"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Device-Id",
												"value": "<string>",
												"description": "(Required) Identificador del dispositivo que consume el servicio"
											},
											{
												"key": "X-Platform",
												"value": "<AND|IOS>",
												"description": "(Required) Plataforma del dispositivo que consume el servicio ( AND:Android , IOS:IOS )"
											},
											{
												"key": "X-Application",
												"value": "<CUS|COM>",
												"description": "(Required) Aplicación del dispositivo que consume el servicio ( CUS:Aplicación Cliente , COM:Aplicación Negocio )"
											},
											{
												"key": "access_token",
												"value": "<string>",
												"description": "(Required) Token de acceso del dispositivo que consume el servicio"
											},
											{
												"key": "client_id",
												"value": "<string>",
												"description": "(Required) Client id de la aplicación"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/benefit/spsa/invoices/last",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"benefit",
												"spsa",
												"invoices",
												"last"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": \"GEN_ALL_02\",\n \"message\": \"Error de servidor interno.\"\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "fc092d83-5b75-4a98-9c0c-b853e259ab71",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "08fffda8-c672-4458-a043-ec9bc4f418ae",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "c1579d8c-42a8-4e76-8129-584dd314131e",
			"key": "baseUrl",
			"value": "https://api.indigital.com.pe/qa",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}